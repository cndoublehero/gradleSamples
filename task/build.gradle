task compile << {
	println "compiling source"
}

task compileTest(dependsOn : compile) << {
	println "compling unit tests"
}

task test(dependsOn : [compile, compileTest]) << {
	println "running unit tests"
}

task dist(dependsOn : [compile, test]) << {
	println "building the distribution"
}

println name
println project.name

classDir = new File("build/classes")

task resources << {
	classDir.mkdirs()
}

task compile1(dependsOn : "resources") << {
	if(classDir.isDirectory()) {
		println "The class directory exist. I can operate"
	}
}

task printProps << {
    println commandLineProjectProp
    println gradlePropertiesProp
    println systemProjectProp
    println envProjectProp
    println System.properties['system']
}

task taskX << {
	println "taskX"
}

taskX.dependsOn {
	tasks.findAll { task -> task.name.startsWith("lib")}
}

task lib1 << {
	println "lib1"
}

task lib2 << {
	println "lib2"
}

task nlib1 << {
	println "2lib2"
}

compile.doFirst {
	if(true) { throw new StopExecutionException()}
}

task myTask(dependsOn : "compile") << {
	println "I'm not affected"
}

myTask.enabled = false

task hello << {
	String greeting = "hello from Ant"
	ant.echo(message : greeting)
	ant.echo("hello from Ant")
}

ant.importBuild 'build.xml'

task intro(dependsOn : hello1) << {
	println "hello, gradle"
}

hello1 << {
	println "hello, Gradle adding behaviour"
}

task intro2 << {
	println "hello, gradle"
}
